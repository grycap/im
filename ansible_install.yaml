- hosts: localhost
  connection: local
  tasks:
    - name: Yum install epel-release
      action: yum pkg=epel-release state=installed
      when: ansible_os_family == "RedHat" and ansible_distribution != "Fedora"

    - name: Install libselinux-python in RH
      action: yum pkg=libselinux-python state=installed
      when: ansible_os_family == "RedHat" and ansible_distribution != "Fedora"

################################################ Configure Ansible  ###################################################

    - name: Create /etc/ansible
      file: path=/etc/ansible state=directory
      
    - name: Set host_key_checking to false in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=host_key_checking value=False

    - name: Set nocolor to 1 in ansible.cfg to avoid strange chars in Ansible outputs
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=nocolor value=1

    - name: Set timeout to 30 in ansible.cfg to avoid problems with some VMs
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=timeout value=30

    - name: Set transport to ssh in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=transport value=ssh
      
    - name: Change ssh_args to set ControlPersist to 15 min in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=ssh_connection option=ssh_args value="-o ControlMaster=auto -o ControlPersist=900s"

    - name: Activate SSH pipelining in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=ssh_connection option=pipelining value=True

################################################ Install IM  ###################################################

    - name: Apt-get update
      apt: update_cache=yes cache_valid_time=3600
      when: ansible_os_family == "Debian"

    - name: Debian/Ubuntu install requisites
      apt: name=gcc,openssh-client,sshpass install_recommends=no
      when: ansible_os_family == "Debian"

    - name: Debian/Ubuntu install python3-pip with apt
      apt: name=python3-pip,python3-dev install_recommends=no
      when: ansible_python_version is version('3', '>=')

    - name: Debian/Ubuntu install python-pip with apt
      apt: name=python-pip,python-dev install_recommends=no
      when: ansible_python_version is version('3', '<')

    - name: Apt install requirements Debian
      apt: name=default-libmysqlclient-dev
      when: ansible_distribution == "Debian" or (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 20)

    - name: Assure that my_config.h exists
      file:
        path: /usr/include/mysql/my_config.h
        state: touch
        mode: '0644'
      ignore_errors: yes
      when: ansible_distribution == "Debian"

    - name: Apt install requirements Ubuntu
      apt: name=libmysqld-dev
      when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int < 20

    - name: Yum install requirements RH
      yum: name=python3-pip,wget,openssh-clients,sshpass,gcc,python3-devel,mysql-devel
      when: ansible_os_family == "RedHat" and ansible_distribution != "Fedora"

    - name: Yum install requirements Fedora
      yum: name=python3-pip,redhat-rpm-config,wget,openssh-clients,sshpass,gcc,python3-devel,mysql-devel
      when: ansible_distribution == "Fedora"

    - name: Set pip3
      set_fact:
        pip_exec: pip3
      when: ansible_python_version is version('3', '>=')

    - name: Set pip2
      set_fact:
        pip_exec: pip2
      when: ansible_python_version is version('3', '<')

    # Version over 21 does not work with python 3.5 or older
    - name: Upgrade pip in py3.5
      pip:
        name: pip>18.0,<21.0
        executable: "{{pip_exec}}"
      when: ansible_python_version is version('3.6', '<')

    - name: Upgrade pip in py3.6 +
      pip:
        name: pip>18.0
        executable: "{{pip_exec}}"
      when: ansible_python_version is version('3.6', '>=')

    - name: Install setuptools with pip
      pip: executable=pip3 name=setuptools,six extra_args="-I"

    - name: Install cryptography
      pip:
        name: cryptography<3.3
        executable: "{{pip_exec}}"
        extra_args: --prefer-binary

    - name: Install pyOpenSSL
      pip:
        name: pyOpenSSL>20.0
        executable: "{{pip_exec}}"
        extra_args: --prefer-binary

    - name: Install Azure pip libraries
      pip:
        name: msrest,msrestazure,azure-common,azure-mgmt-storage,azure-mgmt-compute,azure-mgmt-network,azure-mgmt-resource,azure-mgmt-dns
        executable: "{{pip_exec}}"

    - name: Install pip libraries
      pip:
        name: mysqlclient,xmltodict,cheroot,pymongo
        executable: "{{pip_exec}}"

    - name: Install IM
      pip:
        name: IM
        executable: "{{pip_exec}}"

