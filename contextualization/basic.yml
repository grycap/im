---
- gather_facts: False
  tasks: 
      # Some OSs does not have python by default
    - name: Check Python is installed
      raw: which python
      ignore_errors: yes
      register: python_exists
      changed_when: false

    # Ubuntu 16 have an annoying apt boot process
    - name: Delete apt processes
      raw: ls /etc/debian_version && pgrep apt && (sudo killall apt ; sleep 1 ; sudo rm -f /var/lib/apt/lists/lock && sudo rm -f /var/lib/dpkg/lock && sudo dpkg --configure -a ; sudo apt-get -f -y install)
      ignore_errors: yes

    - name: Bootstrap with python
      raw: sudo apt update; sudo apt install -y python; sudo yum install -y python; sudo zypper -n install python python-xml
      ignore_errors: yes
      register: python_install
      changed_when: python_install.stdout_lines|length > 1
      when: python_exists|failed

    # In case of redhat systems libselinux-python is needed
    - name: Install libselinux-python on redhat systems
      action: yum pkg=libselinux-python state=installed
      become: yes
      ignore_errors: yes

    # Set the correct hostname
    - name: Set the hostname of the node
      action: hostname name={{ IM_NODE_FQDN }}
      become: yes
      ignore_errors: yes

    # In case of redhat systems disable SELinux
    - name: Disable SELinux in REL systems
      action: selinux state=disabled
      become: yes
      ignore_errors: yes

    # Add the authorized_key to the nodes to enable accessing without password
    # pk_file var must be added by the ctxt agent
    - name: Add the authorized_key to the nodes
      action: authorized_key user={{ansible_user}} key="{{ lookup('file', pk_file) }}"

    # Added to solve GCE issues removing the key
    - name: Add the authorized_key to the nodes again
      lineinfile: dest="/home/{{ansible_user}}/.ssh/authorized_keys" line="{{ lookup('file', pk_file) }}2"
      ignore_errors: yes

    - name: Gather Facts
      setup: 

    - name: Ubuntu apt update
      apt: update_cache=yes cache_valid_time=3600
      when: ansible_distribution == "Ubuntu"
      ignore_errors: yes
      register: apt_update
      become: yes
      become_method: sudo
  
    - name: Ubuntu force apt update (avoid apt lock)
      command: apt update
      when: ansible_distribution == "Ubuntu" and apt_update|failed
      become: yes
      become_method: sudo
