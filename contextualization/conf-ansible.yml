---
- hosts: "{{IM_HOST}}"
  become: yes
  become_method: sudo
  gather_facts: false
  vars:
    # Ansible specific Version or "latest"
    ANSIBLE_VERSION: 2.6.15
  tasks:
    # Some OSs does not have python by default
    - name: Check Python is installed
      raw: which python
      ignore_errors: yes
      register: python_exists
      changed_when: false

    # Ubuntu 16 have an annoying apt-daily.service boot process
#    - name: Delete apt processes
#      raw: ls /etc/debian_version && pgrep apt && (sudo killall apt ; sleep 1 ; sudo rm -f /var/lib/apt/lists/lock && sudo rm -f /var/lib/dpkg/lock && sudo dpkg --configure -a ; sudo apt-get -f -y install)
#      ignore_errors: yes

    - name: Bootstrap with python
      raw: sudo apt update; sudo apt install -y python; sudo yum install -y python; sudo zypper -n install python python-xml
      ignore_errors: yes
      register: python_install
      changed_when: python_install.stdout_lines|length > 1
      when: python_exists is failed

    - name: Get Facts
      setup:

    - name: EPEL
      yum: name=epel-release
      when: ansible_os_family == "RedHat" and ansible_distribution != "Fedora"
      
    - name: Ensure to Enable EPEL repo
      ini_file:
        dest: /etc/yum.repos.d/epel.repo
        section: epel
        option: enabled
        value: 1
      when: ansible_os_family == "RedHat" and ansible_distribution != "Fedora"
      ignore_errors: yes

    - name: Fedora install yum with dnf
      dnf: name=python2-rpm,yum
      when: ansible_distribution == "Fedora"

    - name: Install libselinux-python in RH
      action: yum pkg=libselinux-python state=installed
      when: ansible_os_family == "RedHat"

  ################### Install Ansible in Ubuntu RHEL Debian and Fedora systems with apt and yum #########################
  ################### because they have recent versions of ansible in system repositories ###############################
  
    - name: Ubuntu apt update
      apt: update_cache=yes cache_valid_time=3600
      when: ansible_distribution == "Ubuntu"
      ignore_errors: yes
      register: apt_update
  
    - name: Ubuntu force apt update (avoid apt lock)
      command: apt update
      when: ansible_distribution == "Ubuntu" and apt_update is failed
    
    - name: Debian/Ubuntu install requisites with apt
      apt: name=python-pip,python-jinja2,sshpass,openssh-client,unzip,gcc,python-dev,libffi-dev,libssl-dev update_cache=yes
      when: ansible_os_family == "Debian"

    - name: Yum install requisites RH 6/7/Fedora
      yum: name=python-pip,python-jinja2,sshpass,openssh-clients,wget,gcc,python-devel,libffi-devel,openssl-devel update_cache=yes
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 6

    - name: Ubuntu install Cryptography with apt
      apt: name=python-cryptography
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 16) or (ansible_distribution == "Debian" and ansible_distribution_major_version|int >= 8)

  ############################################ In other systems use pip #################################################

    - name: Zypper install requirements Suse
      zypper: name=python,python-pip,gcc,python-devel,wget,libffi-devel,openssl-devel,python-cryptography,make state=present
      when: ansible_os_family == "Suse"

#    - name: Install Pip (alternative)
#      shell: wget https://bootstrap.pypa.io/get-pip.py && python get-pip.py creates=/usr/local/bin/pip

    # do not upgrade to 10 as it is failing
    - name: Upgrade pip
      pip: name=pip version=9.0.3

    - name: Upgrade setuptools with Pip
      pip: name=setuptools state=latest

    - name: Install pkgs with Pip in RH6
      pip: name="{{ item.name }}" version="{{ item.version }}"
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int <= 6
      with_items:
        - { name: 'pyyaml', version: '3.13' }
        - { name: 'idna', version: '2.7' }
        - { name: 'argparse', version: '1.4.0' }
        - { name: 'paramiko', version: '2.2.4' }
        - { name: 'xmltodict', version: '0.11.0' }

    - name: Install ansible {{ ANSIBLE_VERSION }} with Pip
      pip: name=ansible version={{ ANSIBLE_VERSION }}
      when: ANSIBLE_VERSION != "latest"
      
    - name: Install latest ansible version with Pip
      pip: name=ansible state=latest
      when: ANSIBLE_VERSION == "latest"

#################################### Now install scp, jmespath and pywinrm with pip  ##################################

    - name: Install jmespath with Pip
      pip: name=jmespath

    - name: Install cffi with Pip in RH6
      pip: name=cffi
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int <= 6

    - name: Install scp with Pip
      pip: name=scp

    - name: Install pywinrm with Pip
      pip: name=pywinrm
      ignore_errors: yes
      
################################################ Configure Ansible  ###################################################

    - name: Disable SELinux
      selinux: state=disabled
      when: ansible_os_family == "RedHat"
      ignore_errors: yes
  
    - name: Create /etc/ansible
      file: path=/etc/ansible state=directory
        
    - name: Create /etc/ansible/ansible.cfg
      file: path=/etc/ansible/ansible.cfg state=touch owner=root group=root mode=0644
  
    - name: Set host_key_checking to false in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=host_key_checking value=False

    - name: Set nocolor to 1 in ansible.cfg to avoid strange chars in Ansible outputs
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=nocolor value=1

    - name: Set timeout to 30 in ansible.cfg to avoid problems with some VMs
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=timeout value=30
  
    - name: Set transport to ssh in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=transport value=ssh
      when: ansible_os_family == "Debian" or (ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 6)  or (ansible_os_family == "Suse" and ansible_distribution_major_version|int >= 10)
        
    - name: Set transport to smart in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=transport value=smart
      when: (ansible_os_family == "RedHat" and ansible_distribution_major_version|int < 6) or (ansible_os_family == "Suse" and ansible_distribution_major_version|int < 10)
  
    - name: Change ssh_args to set ControlPersist to 15 min in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=ssh_connection option=ssh_args value="-o ControlMaster=auto -o ControlPersist=900s -o UserKnownHostsFile=/dev/null"
      when: ansible_os_family == "Debian" or (ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 7) or (ansible_os_family == "Suse" and ansible_distribution_major_version|int >= 12)
        
    - name: Change ssh_args to remove ControlPersist in REL 6 and older in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=ssh_connection option=ssh_args value="-o UserKnownHostsFile=/dev/null"
      when: (ansible_os_family == "RedHat" and ansible_distribution_major_version|int < 7) or (ansible_os_family == "Suse" and ansible_distribution_major_version|int < 12)
        
    - name: Activate SSH pipelining in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=ssh_connection option=pipelining value=True
  
    - name: Set jinja2.ext.do to jinja2_extensions in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=jinja2_extensions value=jinja2.ext.do

    - name: Set allow_world_readable_tmpfiles to True ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=allow_world_readable_tmpfiles value=True

    - name: Set fact_caching in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=fact_caching value=jsonfile

    - name: Set fact_caching_connection in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=fact_caching_connection value=/var/tmp/facts_cache

    - name: Set fact_caching_timeout in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=fact_caching_timeout value=86400
        
    - name: Set fact_caching_timeout in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=gathering value=smart

    - name: Set roles_path in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=roles_path value=/etc/ansible/roles
