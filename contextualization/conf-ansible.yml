---
- hosts: "{{IM_HOST}}"
  become: yes
  become_method: sudo
  gather_facts: false
  vars:
    # Ansible specific Version or "latest"
    ANSIBLE_VERSION: 2.6.20
  tasks:
    - name: Set Ansible version from env
      set_fact: ANSIBLE_VERSION={{ lookup('env','ANSIBLE_VERSION') }} 
      when: lookup('env','ANSIBLE_VERSION') != ""

  ################### Some OSs does not have python by default #########################
    - name: Check Python is installed
      raw: python --version
      ignore_errors: yes
      register: python_exists
      changed_when: false

    - name: Check Python2 or Python3 is installed
      raw: python2 --version || python3 --version
      ignore_errors: yes
      register: python2_exists
      changed_when: false

    - name: Bootstrap with python
      raw: sudo apt update && sudo apt install -y python; sudo yum install -y python || sudo yum install -y python2; sudo zypper -n install python python-xml
      ignore_errors: yes
      register: python_install
      changed_when: python_install.stdout_lines|length > 1
      when: python_exists is failed and python2_exists is failed

  ################### Some basic OSs operations #########################
    - name: Get Facts
      setup:

    - name: EPEL
      yum: name=epel-release
      when: ansible_os_family == "RedHat" and ansible_distribution != "Fedora"
      
    - name: Ensure to Enable EPEL repo
      ini_file:
        dest: /etc/yum.repos.d/epel.repo
        section: epel
        option: enabled
        value: 1
      when: ansible_os_family == "RedHat" and ansible_distribution != "Fedora"
      ignore_errors: yes

    - name: Fedora install yum with dnf
      dnf: name=python2-rpm,yum
      when: ansible_distribution == "Fedora"

    - name: Ubuntu/Debian apt update
      apt: update_cache=yes cache_valid_time=3600
      when: ansible_os_family == "Debian"
      ignore_errors: yes
      register: apt_update

    - name: Ubuntu/Debian force apt update (avoid apt lock)
      command: apt update
      when: ansible_os_family == "Debian" and apt_update is failed

  ################### Install Ansible/pip requisites #########################

    - name: Install ansible repo in old Ubuntu to have a good python-crypto version
      block:

      - name: Install wget
        apt: name=wget install_recommends=no

      - name: Add ansible repo keys
        shell: wget --no-check-certificate -qO - 'https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x6125e2a8c77f2818fb7bd15b93c4a3fd7bb9c367' | apt-key add -qq - >/dev/null
      
      - name: Add ansible repo
        copy:
          content: "deb http://ppa.launchpad.net/ansible/ansible/ubuntu {{ ansible_distribution_release }} main"
          dest: /etc/apt/sources.list.d/ansible.list

      - name: Apt update
        apt: update_cache=yes

      when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int < 18

    - name: Debian/Ubuntu install requisites with apt
      apt: name=python-pip,python-setuptools,python-jinja2,sshpass,openssh-client,unzip,python-crypto install_recommends=no
      when: ansible_os_family == "Debian"

    - name: Ubuntu 14 extra packages needed
      apt: name=gcc,python-dev,libffi-dev,libssl-dev install_recommends=no
      when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int <= 14

    - name: Yum install requisites RH 6/7/ Fedora 27-
      yum: name=python-pip,python-setuptools,python-jinja2,sshpass,openssh-clients update_cache=yes
      when: (ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 6  and ansible_distribution_major_version|int < 8) or (ansible_distribution == "Fedora" and ansible_distribution_major_version|int < 28)

    - name: Yum install requisites RH 8 / Fedora 28+
      yum: name=python2-pip,python2-setuptools,python2-jinja2,sshpass,openssh-clients update_cache=yes
      when: (ansible_distribution != "Fedora" and ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 8) or (ansible_distribution == "Fedora" and ansible_distribution_major_version|int >= 28)

    - name: Yum install extra requisites RH 6
      yum: name=gcc,libffi-devel,openssl-devel,python-devel update_cache=yes
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int <= 6 

    - name: Zypper install requirements Suse
      zypper: name=python,python-pip,python-setuptools,gcc,python-devel,wget,libffi-devel,openssl-devel,python-cryptography,make state=present
      when: ansible_os_family == "Suse"

    # In some cases python link is not created
    - name: Check if python exists
      stat:
        path: /usr/bin/python
      register: python

    - name: Create a symbolic link to python2
      file:
        src: /usr/bin/python2
        dest: /usr/bin/python
        state: link
      when: not python.stat.exists

  ######################################### Use pip to enable to set the version #############################################

    - name: Upgrade pip
      pip: name=pip version=9.0.3 executable=pip2

    - name: Upgrade setuptools with Pip
      pip: name=setuptools state=latest executable=pip2
      when: ansible_os_family != "RedHat" or ansible_distribution_major_version|int > 6

    - name: Install pkgs with Pip in RH6
      pip: name="{{ item.name }}" version="{{ item.version }}" executable=pip2
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int <= 6
      with_items:
        - { name: 'setuptools', version: '28.8.1' }
        - { name: 'pyyaml', version: '3.13' }
        - { name: 'idna', version: '2.7' }
        - { name: 'argparse', version: '1.4.0' }
        - { name: 'paramiko', version: '2.2.4' }
        - { name: 'xmltodict', version: '0.11.0' }

    - name: Install pyyaml
      pip: name=pyyaml executable=pip2

    - name: Install ansible {{ ANSIBLE_VERSION }} with Pip
      pip: name=ansible version={{ ANSIBLE_VERSION }} executable=pip2
      when: ANSIBLE_VERSION != "latest"
      
    - name: Install latest ansible version with Pip
      pip: name=ansible state=latest executable=pip2
      when: ANSIBLE_VERSION == "latest"

#################################### Now install scp, jmespath and pywinrm with pip  ##################################

    - name: Install jmespath with Pip
      pip: name=jmespath executable=pip2

    - name: Install cffi with Pip in RH6
      pip: name=cffi executable=pip2
      when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int <= 6

    - name: Install scp with Pip
      pip: name=scp executable=pip2

    - name: Install pywinrm with Pip
      pip: name=pywinrm executable=pip2
      ignore_errors: yes

################################################ Configure Ansible  ###################################################

    - name: Create /etc/ansible
      file: path=/etc/ansible state=directory

    - name: Create /etc/ansible/ansible.cfg
      file: path=/etc/ansible/ansible.cfg state=touch owner=root group=root mode=0644

    - name: Set Ansible config file values
      ini_file: dest=/etc/ansible/ansible.cfg section={{ item.section }} option={{ item.option }} value="{{ item.value }}"
      with_items:
      - { section: 'defaults', option: 'host_key_checking', value: 'False' }
      - { section: 'defaults', option: 'nocolor', value: '1' }
      - { section: 'defaults', option: 'timeout', value: '30' }
      - { section: 'ssh_connection', option: 'pipelining', value: 'True' }
      - { section: 'defaults', option: 'jinja2_extensions', value: 'jinja2.ext.do' }
      - { section: 'defaults', option: 'allow_world_readable_tmpfiles', value: 'True' }
      - { section: 'defaults', option: 'fact_caching', value: 'jsonfile' }
      - { section: 'defaults', option: 'fact_caching_connection', value: '/var/tmp/facts_cache' }
      - { section: 'defaults', option: 'fact_caching_timeout', value: '86400' }
      - { section: 'defaults', option: 'gathering', value: 'smart' }
      - { section: 'defaults', option: 'roles_path', value: '/etc/ansible/roles' }
      - { section: 'defaults', option: 'timeout', value: '30' }
  
    - name: Set transport to ssh in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=transport value=ssh
      when: ansible_os_family == "Debian" or (ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 6)  or (ansible_os_family == "Suse" and ansible_distribution_major_version|int >= 10)
        
    - name: Set transport to smart in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=defaults option=transport value=smart
      when: (ansible_os_family == "RedHat" and ansible_distribution_major_version|int < 6) or (ansible_os_family == "Suse" and ansible_distribution_major_version|int < 10)
  
    - name: Change ssh_args to set ControlPersist to 15 min in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=ssh_connection option=ssh_args value="-o ControlMaster=auto -o ControlPersist=900s -o UserKnownHostsFile=/dev/null"
      when: ansible_os_family == "Debian" or (ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 7) or (ansible_os_family == "Suse" and ansible_distribution_major_version|int >= 12)
        
    - name: Change ssh_args to remove ControlPersist in REL 6 and older in ansible.cfg
      ini_file: dest=/etc/ansible/ansible.cfg section=ssh_connection option=ssh_args value="-o UserKnownHostsFile=/dev/null"
      when: (ansible_os_family == "RedHat" and ansible_distribution_major_version|int < 7) or (ansible_os_family == "Suse" and ansible_distribution_major_version|int < 12)
        

