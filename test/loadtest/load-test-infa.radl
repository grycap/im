network publica (outbound = 'yes')
network privada ()

system im (
cpu.count>=2 and
memory.size>=2G and
net_interface.0.connection = 'publica' and
net_interface.1.connection = 'privada' and
net_interface.1.dns_name = 'imservice' and
disk.0.os.name='linux' and
disk.0.os.flavour='ubuntu' and
disk.0.os.version >= '16.04' and
disk.0.os.credentials.new.password = 'Tututu+01' and
disk.0.applications contains (name='ansible.modules.grycap.docker')
)

system imclient (
cpu.count>=2 and
memory.size>=2G and
net_interface.0.connection = 'privada' and
net_interface.0.dns_name = 'imclient' and
disk.0.os.name='linux' and
disk.0.os.flavour='ubuntu' and
disk.0.os.version >= '16.04' and
disk.0.os.credentials.new.password = 'Tututu+01'
)

system infra (
cpu.count>=2 and
memory.size>=2G and
net_interface.0.connection = 'privada' and
net_interface.0.dns_name = 'infra' and
disk.0.os.name='linux' and
disk.0.os.flavour='ubuntu' and
disk.0.os.version >= '16.04' and
disk.0.os.credentials.new.password = 'Tututu+01' and
disk.0.applications contains (name='ansible.modules.grycap.kubernetes')
)

system infrawn (
cpu.count>=4 and
memory.size>=8G and
net_interface.0.connection = 'privada' and
net_interface.0.dns_name = 'infrawn' and
disk.0.os.name='linux' and
disk.0.os.flavour='ubuntu' and
disk.0.os.version >= '16.04' and
disk.0.os.credentials.new.password = 'Tututu+01' and
disk.0.applications contains (name='ansible.modules.grycap.kubernetes')
)


configure im (
@begin
---
  - vars:
     MYSQL: true
     IMVERSION: 1.8.7-dev2
     #IMVERSION: latest

    roles:
    - role: 'grycap.docker'

    tasks:
    - block:
      - name: Download test inf.dat
        get_url: url=https://raw.githubusercontent.com/grycap/im/devel/test/loadtest/inf.dat dest=/var/tmp/inf.dat

      - name: im container
        docker_container:
          name: im
          image: "grycap/im:{{ IMVERSION }}"
          state: started
          volumes:
          - "/var/tmp/inf.dat:/etc/im/inf.dat"
          ports:
          - "8800:8800"
          - "8899:8899"
          expose:
          - 8899
          - 8800
      when: not MYSQL

    - block:
      - name: mysql container
        docker_container:
          name: immysql
          image: "mysql:5.7"
          state: started
          env:
              MYSQL_ROOT_PASSWORD: impass
              MYSQL_DATABASE: imdb 

      - name: Download test inf.dat
        get_url: url=https://raw.githubusercontent.com/grycap/im/devel/test/loadtest/data.sql dest=/var/tmp/data.sql

      - name: Initialize IM data
        shell: docker exec -i immysql mysql -uroot -pimpass imdb < /var/tmp/data.sql

      - name: im container
        docker_container:
          name: im
          image: "grycap/im:{{ IMVERSION }}"
          state: started
          ports:
          - "8800:8800"
          - "8899:8899"
          expose:
          - 8899
          - 8800
          links:
          - "immysql:immysql"
          env:
            IM_DATA_DB: "mysql://root:impass@immysql/imdb"
      when: MYSQL

    - name: Install Reqs Deb
      apt: name=sysstat update_cache=yes cache_valid_time=3600
      when: ansible_os_family == "Debian"
      
    - name: Install Reqs RH
      yum: name=sysstat
      when: ansible_os_family == "RedHat"

    - name: Configure sysstat
      lineinfile: dest=/etc/default/sysstat regexp="^ENABLED=" line='ENABLED="true"'
      when: ansible_os_family == "Debian"

    - name: Configure cron sysstat
      #copy: dest=/etc/cron.d/sysstat content="*/1 * * * * root date >> /tmp/dates && /usr/lib/sysstat/debian-sa1 1 1\n"
      copy: dest=/etc/cron.d/sysstat content="*/1 * * * * root command -v /usr/lib/sysstat/debian-sa1 > /dev/null && /usr/lib/sysstat/debian-sa1 1 1\n"
      when: ansible_os_family == "Debian"

    - name: Restart sysstat
      service: name=sysstat state=restarted
      
    - name: Start sysstat
      shell: /usr/lib/sysstat/debian-sa1 1 1
      when: ansible_os_family == "Debian"
@end
)

configure imclient (
@begin
---
  - vars:
     INFRA_NODE_IP: "{{ hostvars[groups['infra'][0]]['IM_NODE_NET_0_IP'] }}"
     DURATION: 300
     THREADS_READ: 10
     THREADS_WRITE: 5
     RAND_DELAY: 10
     CONST_DELAY: 10
    tasks:
    - name: Install Reqs
      apt: name=openjdk-8-jdk update_cache=yes cache_valid_time=3600

    - name: Download apache-jmeter-5.1.1.tgz
      get_url: url=http://ftpgrycap.i3m.upv.es/src/apache-jmeter-5.1.1.tgz dest=/opt/apache-jmeter-5.1.1.tgz
      
    - name: Extract apache-jmeter in /opt
      unarchive:
        src: /opt/apache-jmeter-5.1.1.tgz
        dest: /opt/
        creates: /opt/apache-jmeter-5.1.1
        remote_src: yes

    - name: Create test.sh file
      copy:
        dest: /var/tmp/test.sh
        content: |
          #!/bin/bash 
          /opt/apache-jmeter-5.1.1/bin/jmeter -n -t /var/tmp/im_load_tests.jmx -JIMHOST=imservice -JKUBE_IP={{INFRA_NODE_IP}} -JTHREADS_READ={{ THREADS_READ }} -JTHREADS_WRITE={{ THREADS_WRITE }} -JDURATION={{ DURATION }} -JCONST_DELAY={{ CONST_DELAY }} -JRAND_DELAY={{ RAND_DELAY }}          
        mode: 0755

    - name: Download LoadTest files
      get_url: url=https://raw.githubusercontent.com/grycap/im/devel/test/loadtest/{{item}} dest=/var/tmp/{{item}}
      with_items:
       - im_load_tests.jmx

@end
)

configure infrawn (
@begin
  - roles:
    - role: 'grycap.kubernetes'
      kube_type_of_node: 'wn'
      kube_server: 'infra'
@end
)

configure infra (
@begin
  - pre_tasks:
    - firewalld: port=6443/tcp permanent=true state=enabled immediate=yes
      when: ansible_os_family == "RedHat"
      ignore_errors: yes

    - name: Create auth file dir
      file: path=/etc/kubernetes/pki state=directory mode=755 recurse=yes
    - name: Create auth data file with an admin user
      copy: content='sometoken,kubeuser,100,"users,system:masters"' dest=/etc/kubernetes/pki/auth mode=600

    roles:
    - role: 'grycap.kubernetes'
      kube_server: 'infra'
      kube_apiserver_options: [{option: "--insecure-port", value: "8080"}, {option: "--token-auth-file", value: "/etc/kubernetes/pki/auth"}]
      kube_deploy_dashboard: false
      kube_install_helm: false
@end
)



deploy im 1
deploy imclient 1
deploy infra 1
deploy infrawn 1
