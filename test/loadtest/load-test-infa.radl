network publica (outbound = 'yes')
network privada ()

system im (
cpu.count>=1 and
memory.size>=2G and
net_interface.0.connection = 'publica' and
net_interface.1.connection = 'privada' and
net_interface.1.dns_name = 'imservice' and
disk.0.os.name='linux' and
disk.0.os.flavour='ubuntu' and
disk.0.os.version >= '16.04' and
disk.0.os.credentials.new.password = 'Tututu+01' and
disk.0.applications contains (name='ansible.modules.grycap.docker')
)

system imclient (
cpu.count>=1 and
memory.size>=1G and
net_interface.0.connection = 'privada' and
net_interface.0.dns_name = 'imclient' and
disk.0.os.name='linux' and
disk.0.os.flavour='ubuntu' and
disk.0.os.version >= '16.04' and
disk.0.os.credentials.new.password = 'Tututu+01'
)

system infra (
cpu.count>=2 and
memory.size>=2G and
net_interface.0.connection = 'privada' and
net_interface.0.dns_name = 'infra' and
disk.0.os.name='linux' and
disk.0.os.flavour='ubuntu' and
disk.0.os.version >= '16.04' and
disk.0.os.credentials.new.password = 'Tututu+01' and
disk.0.applications contains (name='ansible.modules.grycap.kubernetes')
)

system infrawn (
cpu.count>=4 and
memory.size>=8G and
net_interface.0.connection = 'privada' and
net_interface.0.dns_name = 'infrawn' and
disk.0.os.name='linux' and
disk.0.os.flavour='ubuntu' and
disk.0.os.version >= '16.04' and
disk.0.os.credentials.new.password = 'Tututu+01' and
disk.0.applications contains (name='ansible.modules.grycap.kubernetes')
)


configure im (
@begin
---
  - roles:
    - role: 'grycap.docker'

    tasks:
    - name: Download test inf.dat
      get_url: url=https://raw.githubusercontent.com/grycap/im/devel/test/loadtest/inf.dat dest=/var/tmp/inf.dat

    - name: im container
      docker_container:
        name: im
        image: "grycap/im"
        state: started
        volumes:
        - "/var/tmp/inf.dat:/etc/im/inf.dat"
        ports:
        - "8800:8800"
        - "8899:8899"
        expose:
        - 8899
        - 8800

    - name: Install Reqs Deb
      apt: name=sysstat update_cache=yes cache_valid_time=3600
      when: ansible_os_family == "Debian"
      
    - name: Install Reqs RH
      yum: name=sysstat
      when: ansible_os_family == "RedHat"

    - name: Configure sysstat
      lineinfile: dest=/etc/default/sysstat regexp="^ENABLED=" line='ENABLED="true"'
      when: ansible_os_family == "Debian"

    - name: Configure cron sysstat
      #copy: dest=/etc/cron.d/sysstat content="*/1 * * * * root date >> /tmp/dates && /usr/lib/sysstat/debian-sa1 1 1\n"
      copy: dest=/etc/cron.d/sysstat content="*/1 * * * * root command -v /usr/lib/sysstat/debian-sa1 > /dev/null && /usr/lib/sysstat/debian-sa1 1 1\n"
      when: ansible_os_family == "Debian"

    - name: Restart sysstat
      service: name=sysstat state=restarted
      
    - name: Start sysstat
      shell: /usr/lib/sysstat/debian-sa1 1 1
      when: ansible_os_family == "Debian"
@end
)

configure imclient (
@begin
---
  - vars:
    - INFRA_NODE_IP: "{{ hostvars[groups['infra'][0]]['IM_NODE_NET_0_IP'] }}"
    tasks:
    - name: Install Reqs
      apt: name=gcc,python-dev,python-pip,python-mysqldb,openssh-client,sshpass,libssl-dev,libffi-dev,libsqlite3-dev,make update_cache=yes cache_valid_time=3600
      when: ansible_os_family == "Debian"
      
    - name: Yum install requirements RH or Fedora
      yum: name=git,gcc,python-distribute,gcc,python-devel,wget,openssh-clients,sshpass,python-pip,libffi-devel,openssl-devel,sqlite-devel,make
      when: ansible_os_family == "RedHat"

    - name: Install IM with Pip
      pip: name=IM

    - name: Create auth.dat file
      copy:
        dest: /tmp/auth.dat
        content: |
            type = InfrastructureManager; username = imuser01; password = invitado
            type = VMRC; host = http://servproject.i3m.upv.es:8080/vmrc/vmrc; username = demo; password = demo
            id = kube; type = Kubernetes; host = https://{{INFRA_NODE_IP}}:6443; token = sometoken
        mode: 0644

    - name: Download LoadTest.py
      get_url: url=https://raw.githubusercontent.com/grycap/im/master/test/loadtest/{{item}} dest=/tmp/{{item}}
      with_items:
       - LoadTest.py
       - load-test.radl
       - LoadTestR.py
       - LoadTestREST.py
       - LoadTestRESTR.py

@end
)

configure infrawn (
@begin
  - roles:
    - role: 'grycap.kubernetes'
      kube_type_of_node: 'wn'
      kube_server: 'infra'
@end
)

configure infra (
@begin
  - pre_tasks:
    - firewalld: port=6443/tcp permanent=true state=enabled immediate=yes
      when: ansible_os_family == "RedHat"
      ignore_errors: yes

    - name: Create auth file dir
      file: path=/etc/kubernetes/pki state=directory mode=755 recurse=yes
    - name: Create auth data file with an admin user
      copy: content='sometoken,kubeuser,100,"users,system:masters"' dest=/etc/kubernetes/pki/auth mode=600

    roles:
    - role: 'grycap.kubernetes'
      kube_server: 'infra'
      kube_apiserver_options: [{option: "--insecure-port", value: "8080"}, {option: "--token-auth-file", value: "/etc/kubernetes/pki/auth"}]
      kube_deploy_dashboard: false
      kube_install_helm: false
@end
)



deploy im 1
deploy imclient 1
deploy infra 1
deploy infrawn 1
