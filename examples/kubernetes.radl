network public (outbound = 'yes')
network private ()

system front (
cpu.arch='x86_64' and
cpu.count>=2 and
memory.size>=2g and
net_interface.0.connection = 'private' and
net_interface.0.dns_name = 'kubeserver' and
net_interface.1.connection = 'public' and
net_interface.1.dns_name = 'kubeserverpublic' and
disk.0.os.name='linux' and
disk.0.os.flavour='ubuntu' and
disk.0.os.version>='16.04' and
disk.0.applications contains (name='ansible.modules.grycap.kubernetes')
)

system wn (
cpu.arch='x86_64' and
cpu.count>=2 and
memory.size>=2g and
net_interface.0.connection = 'private' and
net_interface.0.dns_name = 'wn-#N#' and
disk.0.os.name='linux' and
disk.0.os.flavour='ubuntu' and
disk.0.os.version>='16.04'
)

configure front (
@begin
---
 - pre_tasks:
    - name: Create dir for the NFS PV
      file: path=/pv state=directory mode=755
    - name: Create auth file dir
      file: path=/etc/kubernetes/pki state=directory mode=755 recurse=yes
    - name: Create auth data file with an admin user
      copy: content='sometoken,kubeuser,100,"users,system:masters"' dest=/etc/kubernetes/pki/auth mode=600

   roles:
    - role: 'grycap.nfs'
      nfs_mode: 'front'
      nfs_exports: [{path: "/pv", export: "wn-*.localdomain(fsid=0,rw,async,no_root_squash,no_subtree_check,insecure)"}]

    - role: 'grycap.kubernetes'
      kube_server: 'kubeserver'
      kube_apiserver_options: [{option: "--insecure-port", value: "8080"}, {option: "--token-auth-file", value: "/etc/kubernetes/pki/auth"}]
      kube_deploy_dashboard: true
      kube_install_helm: true
@end
)

configure wn (
@begin
---
 - roles:
    - role: 'grycap.nfs'
      nfs_mode: 'wn'

    - role: 'grycap.kubernetes'
      kube_type_of_node: 'wn'
      kube_server: 'kubeserver'

@end
)


deploy front 1
deploy wn 2

